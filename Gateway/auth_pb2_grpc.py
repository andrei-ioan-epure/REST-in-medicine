# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import auth_pb2 as auth__pb2


class AuthServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AuthenticateUser = channel.unary_unary(
                '/com.idm.proto.AuthService/AuthenticateUser',
                request_serializer=auth__pb2.AuthenticationRequest.SerializeToString,
                response_deserializer=auth__pb2.AuthenticationResponse.FromString,
                )
        self.ValidateToken = channel.unary_unary(
                '/com.idm.proto.AuthService/ValidateToken',
                request_serializer=auth__pb2.TokenValidationRequest.SerializeToString,
                response_deserializer=auth__pb2.TokenValidationResponse.FromString,
                )
        self.DestroyToken = channel.unary_unary(
                '/com.idm.proto.AuthService/DestroyToken',
                request_serializer=auth__pb2.DestroyTokenRequest.SerializeToString,
                response_deserializer=auth__pb2.DestroyTokenResponse.FromString,
                )


class AuthServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AuthenticateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DestroyToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AuthenticateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthenticateUser,
                    request_deserializer=auth__pb2.AuthenticationRequest.FromString,
                    response_serializer=auth__pb2.AuthenticationResponse.SerializeToString,
            ),
            'ValidateToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateToken,
                    request_deserializer=auth__pb2.TokenValidationRequest.FromString,
                    response_serializer=auth__pb2.TokenValidationResponse.SerializeToString,
            ),
            'DestroyToken': grpc.unary_unary_rpc_method_handler(
                    servicer.DestroyToken,
                    request_deserializer=auth__pb2.DestroyTokenRequest.FromString,
                    response_serializer=auth__pb2.DestroyTokenResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.idm.proto.AuthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AuthenticateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.idm.proto.AuthService/AuthenticateUser',
            auth__pb2.AuthenticationRequest.SerializeToString,
            auth__pb2.AuthenticationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.idm.proto.AuthService/ValidateToken',
            auth__pb2.TokenValidationRequest.SerializeToString,
            auth__pb2.TokenValidationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DestroyToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.idm.proto.AuthService/DestroyToken',
            auth__pb2.DestroyTokenRequest.SerializeToString,
            auth__pb2.DestroyTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getUserById = channel.unary_unary(
                '/com.idm.proto.UserService/getUserById',
                request_serializer=auth__pb2.GetUserRequest.SerializeToString,
                response_deserializer=auth__pb2.GetUserResponse.FromString,
                )
        self.createUser = channel.unary_unary(
                '/com.idm.proto.UserService/createUser',
                request_serializer=auth__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=auth__pb2.CreateUserResponse.FromString,
                )
        self.editUser = channel.unary_unary(
                '/com.idm.proto.UserService/editUser',
                request_serializer=auth__pb2.EditUserRequest.SerializeToString,
                response_deserializer=auth__pb2.EditUserResponse.FromString,
                )
        self.deleteUser = channel.unary_unary(
                '/com.idm.proto.UserService/deleteUser',
                request_serializer=auth__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=auth__pb2.DeleteUserResponse.FromString,
                )


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getUserById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def editUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getUserById': grpc.unary_unary_rpc_method_handler(
                    servicer.getUserById,
                    request_deserializer=auth__pb2.GetUserRequest.FromString,
                    response_serializer=auth__pb2.GetUserResponse.SerializeToString,
            ),
            'createUser': grpc.unary_unary_rpc_method_handler(
                    servicer.createUser,
                    request_deserializer=auth__pb2.CreateUserRequest.FromString,
                    response_serializer=auth__pb2.CreateUserResponse.SerializeToString,
            ),
            'editUser': grpc.unary_unary_rpc_method_handler(
                    servicer.editUser,
                    request_deserializer=auth__pb2.EditUserRequest.FromString,
                    response_serializer=auth__pb2.EditUserResponse.SerializeToString,
            ),
            'deleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteUser,
                    request_deserializer=auth__pb2.DeleteUserRequest.FromString,
                    response_serializer=auth__pb2.DeleteUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.idm.proto.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getUserById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.idm.proto.UserService/getUserById',
            auth__pb2.GetUserRequest.SerializeToString,
            auth__pb2.GetUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.idm.proto.UserService/createUser',
            auth__pb2.CreateUserRequest.SerializeToString,
            auth__pb2.CreateUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def editUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.idm.proto.UserService/editUser',
            auth__pb2.EditUserRequest.SerializeToString,
            auth__pb2.EditUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.idm.proto.UserService/deleteUser',
            auth__pb2.DeleteUserRequest.SerializeToString,
            auth__pb2.DeleteUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
